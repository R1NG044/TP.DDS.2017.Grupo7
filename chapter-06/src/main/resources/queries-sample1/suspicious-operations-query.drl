package org.drools.devguide;

import org.drools.devguide.eshop.model.Client;
import org.drools.devguide.eshop.model.Order;
import org.drools.devguide.eshop.model.OrderState;
import org.drools.devguide.eshop.model.SuspiciousOperation;
import org.drools.devguide.eshop.service.AuditService;
import org.drools.devguide.eshop.service.OrderService;


global Double amountThreshold;
global OrderService orderService;

rule "Detect suspicious amount operations"
when
    $c: Client()
    Number( doubleValue > amountThreshold ) from accumulate (
        Order ( state != OrderState.COMPLETED, $total: total) from orderService.getOrdersByClient($c.id),
        sum($total)
    )
then
    insert(new SuspiciousOperation($c, SuspiciousOperation.Type.SUSPICIOUS_AMOUNT));
end

query "Get All Suspicious Operations"
    $so: SuspiciousOperation()
end

query "Get Client Suspicious Operations" (String $clientId)
    $so: SuspiciousOperation(client.id == $clientId)
end